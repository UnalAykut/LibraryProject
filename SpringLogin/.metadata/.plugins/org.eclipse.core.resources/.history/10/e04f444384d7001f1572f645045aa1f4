package com.project.login.controller;

import java.util.List;

import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.project.login.dto.ReservationAdminResponseDto;
import com.project.login.dto.ReservationRequestDto;
import com.project.login.dto.ReservationResponseDto;
import com.project.login.service.ReservationService;

@RestController
@RequestMapping
public class ReservationController {
	private final ReservationService reservationService;
	public ReservationController(ReservationService reservationService) {
        this.reservationService = reservationService;
    }
	
	// Kullanıcı için rezervasyon oluşturma
    @PostMapping("/api/reservations")
    public ReservationResponseDto reserveBook(@RequestBody ReservationRequestDto reservationRequestDto) {
        return reservationService.reserveBook(reservationRequestDto);
    }
 // Kullanıcı için rezervasyon bilgisi
    @GetMapping("/api/reservations/user/{reservationId}")
    public ReservationResponseDto getUserReservation(@PathVariable Long reservationId) {
        return reservationService.getUserReservation(reservationId);
    }
    
 // Admin için detaylı rezervasyon bilgisi
    @GetMapping("/admin/{reservationId}")
    public ReservationAdminResponseDto getAdminReservation(@PathVariable Long reservationId) {
        return reservationService.getAdminReservation(reservationId);
    }
 // Admin için tüm rezervasyon bilgisi
    @GetMapping("/admin/reservations/all")
    public List<ReservationAdminResponseDto> getAllReservationsForAdmin(){
    	return reservationService.getAllReservationForAdmin();
    }
    
 // Admin için rezervasyon oluşturma
    @PostMapping("/admin/reservation")
    public ReservationAdminResponseDto createAdminResarvation(@RequestBody ReservationRequestDto reservationRequestDto){
    	return reservationService.createReservation(reservationRequestDto);
    }
    
 // Admin için rezervasyon güncelleme
    @PutMapping("/admin/{reservationId}")
    public ReservationAdminResponseDto updateReservation(
            @PathVariable Long reservationId,
            @RequestBody ReservationRequestDto reservationRequestDto) {
        return reservationService.updateReservation(reservationId, reservationRequestDto);
    }
    
 // Admin için rezervasyon silme
    @DeleteMapping("/admin/{reservationId}")
    public void deleteReservation(@PathVariable Long reservationId) {
        reservationService.deleteReservation(reservationId);
    }

    
	
}
