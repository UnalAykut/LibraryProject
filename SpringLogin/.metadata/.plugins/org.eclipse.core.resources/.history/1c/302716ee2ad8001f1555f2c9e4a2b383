package com.project.login.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;

import com.project.login.dto.AdminProfileResponseDto;
import com.project.login.model.Role;
import com.project.login.model.User;
import com.project.login.repository.UserRepository;

@Service
public class AdminService {

    private final UserRepository userRepository;

    private final PasswordEncoder passwordEncoder;

    @Autowired
    public AdminService(UserRepository userRepository, @Lazy PasswordEncoder passwordEncoder) {
        this.userRepository = userRepository;
        this.passwordEncoder = passwordEncoder;
    }

    // Admin doğrulama
    public boolean authenticateAdmin(String username, String password) {
        Optional<User> optionalUser = userRepository.FindByUsername(username);
        if (optionalUser.isPresent()) {
            User user = optionalUser.get();
            // Şifre kontrolü
            if (passwordEncoder.matches(password, user.getPassword())) {
                // Kullanıcı admin mi?
                return user.getRole() == Role.ADMIN;
            }
        }
        return false;
    }
    
    
    // Admin rolü alma
    public Role getUserRole(String username) {
        Optional<User> optionalUser = userRepository.FindByUsername(username);

        return optionalUser
                .map(User::getRole)
                .orElseThrow(() -> new UsernameNotFoundException("Admin bulunamadı: " + username));
    }
    
    public AdminProfileResponseDto getAdminProfile(String username) {
    	User admin = userRepository.FindByUsername(username)
    			.orElseThrow(() -> new UsernameNotFoundException("Admin not found"));
    	// Admin bilgilerini DTO olarak dönün
        return new AdminProfileResponseDto(admin.getUsername());
    }
    
    
    
    
}

